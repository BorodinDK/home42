version: "3.7"
services:
  noip:
    restart: always
    container_name: noip
    image: hypriot/rpi-noip
    volumes:
      - ./data/noip:/usr/local/etc/
  node-red:
    restart: always
    container_name: node-red
    image: nrchkb/node-red-homekit
    environment:
      - TZ=Europe/Moscow
    network_mode: host
    volumes:
      - ./data/node-red:/data
  mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto:1.6.13
    restart: always
    ports:
      - 1883:1883
  zigbee2mqtt:
    container_name: zigbee2mqtt
    image: koenkk/zigbee2mqtt
    volumes:
      - ./data/zigbee2mqtt:/app/data
    devices:
      - /dev/ttyACM0:/dev/ttyACM0
      - /dev/ttyUSB0:/dev/ttyUSB0
    restart: always
    network_mode: host
    privileged: true
    environment:
      - TZ=Europe/Moscow
    depends_on:
      - mosquitto
  influxdb:
    restart: always
    container_name: influxdb
    image: influxdb:1.8.10
    ports:
      - 8086:8086
    volumes:
      - ./data/influxdb:/var/lib/influxdb
    environment:
      - INFLUXDB_DB=home42
      - INFLUXDB_ADMIN_USER=${INFLUXDB_USERNAME}
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_PASSWORD}
  telegraf:
    image: telegraf:latest
    container_name: telegraf
    network_mode: host
    depends_on:
      - influxdb
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /:/hostfs:ro
      - /etc:/hostfs/etc:ro
      - /proc:/hostfs/proc:ro
      - /sys:/hostfs/sys:ro
      - /var/run/utmp:/var/run/utmp:ro
      - ./data/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
  chronograf:
    restart: always
    container_name: chronograf
    image: chronograf:latest
    ports:
      - 8888:8888
    volumes:
      - ./data/chronograf:/var/lib/chronograf
    depends_on:
      - influxdb
    environment:
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_USERNAME=${INFLUXDB_USERNAME}
      - INFLUXDB_PASSWORD=${INFLUXDB_PASSWORD}
  grafana:
    restart: always
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    volumes:
      - ./data/grafana/storage:/var/lib/grafana
      - ./data/grafana/provisioning/:/etc/grafana/provisioning
    environment:
      - GF_PANELS_DISABLE_SANITIZE_HTML=true
    depends_on:
      - influxdb
    environment:
      - GF_PANELS_DISABLE_SANITIZE_HTML=true
  home42_tg_bot:
    container_name: home42_tg_bot
    restart: always
    image: borodin/home42_tg_bot:latest
    environment:
      - TG_TOKEN=${TG_TOKEN}
